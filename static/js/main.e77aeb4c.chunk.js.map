{"version":3,"sources":["componets/ImputForm/ImputForm.jsx","componets/Filter/Filter.jsx","componets/Contacts/Contacts.jsx","componets/App/App.jsx","index.js"],"names":["ImputForm","state","name","number","nameId","uuidv4","numberId","inputChange","e","target","value","setState","submitContacts","preventDefault","props","addContacts","onSubmit","this","className","InputGroup","FormControl","type","required","id","onChange","Button","variant","React","Component","Filter","filterContacts","Contacts","filter","contacts","removeContacts","contact","toLowerCase","includes","map","index","onClick","App","text","newContacts","alert","prev","event","currentTarget","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e77aeb4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nclass ImputForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameId = uuidv4();\r\n  numberId = uuidv4();\r\n\r\n  inputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitContacts = e => {\r\n    e.preventDefault();\r\n    const { name, value } = this.state;\r\n    this.props.addContacts(name, value);\r\n    this.setState({ name: \" \", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.submitContacts} className=\"form-horizontal\">\r\n          <div className=\"container-name\">\r\n            <p>Name</p>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                name=\"name\"\r\n                aria-label=\"Text input with checkbox\"\r\n                type=\"text\"\r\n                required\r\n                id={this.nameId}\r\n                value={this.state.name}\r\n                onChange={this.inputChange}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n          <div className=\"container-number\">\r\n            <p>Number</p>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                name=\"number\"\r\n                aria-label=\"Text input with checkbox\"\r\n                type=\"tel\"\r\n                required\r\n                id={this.numberId}\r\n                value={this.state.number}\r\n                onChange={this.inputChange}\r\n              />\r\n            </InputGroup>\r\n          </div>\r\n          <Button className=\"btn-form\" type=\"submit\" variant=\"outline-success\">\r\n            Add contact\r\n          </Button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImputForm.propTypes = {\r\n  addContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImputForm;\r\n","import PropTypes from \"prop-types\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nconst Filter = ({ filterContacts }) => {\r\n  return (\r\n    <>\r\n      <div className=\"container-filter\">\r\n        <p>Find contacts name</p>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            aria-label=\"Text input with checkbox\"\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            onChange={filterContacts}\r\n          />\r\n        </InputGroup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Contacts = ({ filter, contacts, removeContacts }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"list-filter\">\r\n        {contacts\r\n          .filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase())\r\n          )\r\n          .map((contact, index) => (\r\n            <li className=\"item-filter\" key={contact.id}>\r\n              <span className=\"index\">{++index}</span>\r\n              <p className=\"name\">{contact.name}</p>\r\n              <p className=\"number\">{contact.number}</p>\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() => removeContacts(contact.id)}\r\n                variant=\"outline-danger\"\r\n              >\r\n                Delete\r\n              </Button>{\" \"}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  removeContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ImputForm from \"../ImputForm/ImputForm\";\nimport Filter from \"../Filter/Filter\";\nimport Contacts from \"../Contacts/Contacts\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContacts = (text, value) => {\n    const newContacts = { id: uuidv4(), name: text, number: value };\n    if (\n      this.state.contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(text.toLowerCase())\n    ) {\n      return alert(`Такое имя уже существует`);\n    }\n    this.setState(prev => ({\n      contacts: [...prev.contacts, newContacts],\n    }));\n  };\n\n  filterContacts = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  removeContacts = id => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contacts => contacts.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <>\n        <div className=\"container\">\n          <h1>Phonebook</h1>\n          <ImputForm addContacts={this.addContacts} />\n          <Filter filterContacts={this.filterContacts} />\n        </div>\n        <h2 className=\"contacts\">Contacts</h2>\n        <div className=\"container-contacts\">\n          {this.state.contacts.length ? (\n            <Contacts\n              contacts={contacts}\n              filter={filter}\n              removeContacts={this.removeContacts}\n            />\n          ) : (\n            <p>No contacts</p>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componets/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}